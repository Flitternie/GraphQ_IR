# Generated from ./overnight.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2(")
        buf.write("\u019b\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\3\2\3\2\3\2\3\2\3\2\3\2\3\2")
        buf.write("\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\6\3\6\3")
        buf.write("\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b")
        buf.write("\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\f")
        buf.write("\3\f\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\17\3\17\3\17")
        buf.write("\3\17\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23")
        buf.write("\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25")
        buf.write("\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26")
        buf.write("\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27")
        buf.write("\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30")
        buf.write("\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31")
        buf.write("\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32")
        buf.write("\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34")
        buf.write("\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35")
        buf.write("\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35")
        buf.write("\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36")
        buf.write("\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36")
        buf.write("\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3 \3 \3!\3!\3")
        buf.write("\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"")
        buf.write("\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3")
        buf.write("\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"")
        buf.write("\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3")
        buf.write("\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\5\"\u0181\n")
        buf.write("\"\3#\3#\3$\3$\3%\6%\u0188\n%\r%\16%\u0189\3&\6&\u018d")
        buf.write("\n&\r&\16&\u018e\3\'\3\'\3(\3(\3)\6)\u0196\n)\r)\16)\u0197")
        buf.write("\3)\3)\2\2*\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25")
        buf.write("\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+")
        buf.write("\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E")
        buf.write("$G%I&K\'M\2O\2Q(\3\2\4\6\2//C\\aac|\5\2\13\f\17\17\"\"")
        buf.write("\2\u019d\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2")
        buf.write("\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2")
        buf.write("\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2")
        buf.write("\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3")
        buf.write("\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2")
        buf.write("-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3")
        buf.write("\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2")
        buf.write("?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2")
        buf.write("\2I\3\2\2\2\2K\3\2\2\2\2Q\3\2\2\2\3S\3\2\2\2\5Z\3\2\2")
        buf.write("\2\7\\\3\2\2\2\ta\3\2\2\2\13e\3\2\2\2\rl\3\2\2\2\17q\3")
        buf.write("\2\2\2\21v\3\2\2\2\23}\3\2\2\2\25\177\3\2\2\2\27\u0081")
        buf.write("\3\2\2\2\31\u0083\3\2\2\2\33\u0087\3\2\2\2\35\u008b\3")
        buf.write("\2\2\2\37\u008f\3\2\2\2!\u0093\3\2\2\2#\u009d\3\2\2\2")
        buf.write("%\u00a2\3\2\2\2\'\u00a9\3\2\2\2)\u00b3\3\2\2\2+\u00ba")
        buf.write("\3\2\2\2-\u00c6\3\2\2\2/\u00d2\3\2\2\2\61\u00e3\3\2\2")
        buf.write("\2\63\u00f4\3\2\2\2\65\u00fe\3\2\2\2\67\u0105\3\2\2\2")
        buf.write("9\u010d\3\2\2\2;\u0123\3\2\2\2=\u0137\3\2\2\2?\u013b\3")
        buf.write("\2\2\2A\u013d\3\2\2\2C\u0180\3\2\2\2E\u0182\3\2\2\2G\u0184")
        buf.write("\3\2\2\2I\u0187\3\2\2\2K\u018c\3\2\2\2M\u0190\3\2\2\2")
        buf.write("O\u0192\3\2\2\2Q\u0195\3\2\2\2ST\7u\2\2TU\7v\2\2UV\7t")
        buf.write("\2\2VW\7k\2\2WX\7p\2\2XY\7i\2\2Y\4\3\2\2\2Z[\7#\2\2[\6")
        buf.write("\3\2\2\2\\]\7v\2\2]^\7{\2\2^_\7r\2\2_`\7g\2\2`\b\3\2\2")
        buf.write("\2ab\7x\2\2bc\7c\2\2cd\7t\2\2d\n\3\2\2\2ef\7p\2\2fg\7")
        buf.write("w\2\2gh\7o\2\2hi\7d\2\2ij\7g\2\2jk\7t\2\2k\f\3\2\2\2l")
        buf.write("m\7f\2\2mn\7c\2\2no\7v\2\2op\7g\2\2p\16\3\2\2\2qr\7v\2")
        buf.write("\2rs\7k\2\2st\7o\2\2tu\7g\2\2u\20\3\2\2\2vw\7n\2\2wx\7")
        buf.write("c\2\2xy\7o\2\2yz\7d\2\2z{\7f\2\2{|\7c\2\2|\22\3\2\2\2")
        buf.write("}~\7?\2\2~\24\3\2\2\2\177\u0080\7>\2\2\u0080\26\3\2\2")
        buf.write("\2\u0081\u0082\7@\2\2\u0082\30\3\2\2\2\u0083\u0084\7o")
        buf.write("\2\2\u0084\u0085\7k\2\2\u0085\u0086\7p\2\2\u0086\32\3")
        buf.write("\2\2\2\u0087\u0088\7o\2\2\u0088\u0089\7c\2\2\u0089\u008a")
        buf.write("\7z\2\2\u008a\34\3\2\2\2\u008b\u008c\7u\2\2\u008c\u008d")
        buf.write("\7w\2\2\u008d\u008e\7o\2\2\u008e\36\3\2\2\2\u008f\u0090")
        buf.write("\7c\2\2\u0090\u0091\7x\2\2\u0091\u0092\7i\2\2\u0092 \3")
        buf.write("\2\2\2\u0093\u0094\7n\2\2\u0094\u0095\7k\2\2\u0095\u0096")
        buf.write("\7u\2\2\u0096\u0097\7v\2\2\u0097\u0098\7X\2\2\u0098\u0099")
        buf.write("\7c\2\2\u0099\u009a\7n\2\2\u009a\u009b\7w\2\2\u009b\u009c")
        buf.write("\7g\2\2\u009c\"\3\2\2\2\u009d\u009e\7u\2\2\u009e\u009f")
        buf.write("\7k\2\2\u009f\u00a0\7|\2\2\u00a0\u00a1\7g\2\2\u00a1$\3")
        buf.write("\2\2\2\u00a2\u00a3\7f\2\2\u00a3\u00a4\7q\2\2\u00a4\u00a5")
        buf.write("\7o\2\2\u00a5\u00a6\7c\2\2\u00a6\u00a7\7k\2\2\u00a7\u00a8")
        buf.write("\7p\2\2\u00a8&\3\2\2\2\u00a9\u00aa\7u\2\2\u00aa\u00ab")
        buf.write("\7k\2\2\u00ab\u00ac\7p\2\2\u00ac\u00ad\7i\2\2\u00ad\u00ae")
        buf.write("\7n\2\2\u00ae\u00af\7g\2\2\u00af\u00b0\7v\2\2\u00b0\u00b1")
        buf.write("\7q\2\2\u00b1\u00b2\7p\2\2\u00b2(\3\2\2\2\u00b3\u00b4")
        buf.write("\7h\2\2\u00b4\u00b5\7k\2\2\u00b5\u00b6\7n\2\2\u00b6\u00b7")
        buf.write("\7v\2\2\u00b7\u00b8\7g\2\2\u00b8\u00b9\7t\2\2\u00b9*\3")
        buf.write("\2\2\2\u00ba\u00bb\7i\2\2\u00bb\u00bc\7g\2\2\u00bc\u00bd")
        buf.write("\7v\2\2\u00bd\u00be\7R\2\2\u00be\u00bf\7t\2\2\u00bf\u00c0")
        buf.write("\7q\2\2\u00c0\u00c1\7r\2\2\u00c1\u00c2\7g\2\2\u00c2\u00c3")
        buf.write("\7t\2\2\u00c3\u00c4\7v\2\2\u00c4\u00c5\7{\2\2\u00c5,\3")
        buf.write("\2\2\2\u00c6\u00c7\7u\2\2\u00c7\u00c8\7w\2\2\u00c8\u00c9")
        buf.write("\7r\2\2\u00c9\u00ca\7g\2\2\u00ca\u00cb\7t\2\2\u00cb\u00cc")
        buf.write("\7n\2\2\u00cc\u00cd\7c\2\2\u00cd\u00ce\7v\2\2\u00ce\u00cf")
        buf.write("\7k\2\2\u00cf\u00d0\7x\2\2\u00d0\u00d1\7g\2\2\u00d1.\3")
        buf.write("\2\2\2\u00d2\u00d3\7e\2\2\u00d3\u00d4\7q\2\2\u00d4\u00d5")
        buf.write("\7w\2\2\u00d5\u00d6\7p\2\2\u00d6\u00d7\7v\2\2\u00d7\u00d8")
        buf.write("\7U\2\2\u00d8\u00d9\7w\2\2\u00d9\u00da\7r\2\2\u00da\u00db")
        buf.write("\7g\2\2\u00db\u00dc\7t\2\2\u00dc\u00dd\7n\2\2\u00dd\u00de")
        buf.write("\7c\2\2\u00de\u00df\7v\2\2\u00df\u00e0\7k\2\2\u00e0\u00e1")
        buf.write("\7x\2\2\u00e1\u00e2\7g\2\2\u00e2\60\3\2\2\2\u00e3\u00e4")
        buf.write("\7e\2\2\u00e4\u00e5\7q\2\2\u00e5\u00e6\7w\2\2\u00e6\u00e7")
        buf.write("\7p\2\2\u00e7\u00e8\7v\2\2\u00e8\u00e9\7E\2\2\u00e9\u00ea")
        buf.write("\7q\2\2\u00ea\u00eb\7o\2\2\u00eb\u00ec\7r\2\2\u00ec\u00ed")
        buf.write("\7c\2\2\u00ed\u00ee\7t\2\2\u00ee\u00ef\7c\2\2\u00ef\u00f0")
        buf.write("\7v\2\2\u00f0\u00f1\7k\2\2\u00f1\u00f2\7x\2\2\u00f2\u00f3")
        buf.write("\7g\2\2\u00f3\62\3\2\2\2\u00f4\u00f5\7c\2\2\u00f5\u00f6")
        buf.write("\7i\2\2\u00f6\u00f7\7i\2\2\u00f7\u00f8\7t\2\2\u00f8\u00f9")
        buf.write("\7g\2\2\u00f9\u00fa\7i\2\2\u00fa\u00fb\7c\2\2\u00fb\u00fc")
        buf.write("\7v\2\2\u00fc\u00fd\7g\2\2\u00fd\64\3\2\2\2\u00fe\u00ff")
        buf.write("\7e\2\2\u00ff\u0100\7q\2\2\u0100\u0101\7p\2\2\u0101\u0102")
        buf.write("\7e\2\2\u0102\u0103\7c\2\2\u0103\u0104\7v\2\2\u0104\66")
        buf.write("\3\2\2\2\u0105\u0106\7t\2\2\u0106\u0107\7g\2\2\u0107\u0108")
        buf.write("\7x\2\2\u0108\u0109\7g\2\2\u0109\u010a\7t\2\2\u010a\u010b")
        buf.write("\7u\2\2\u010b\u010c\7g\2\2\u010c8\3\2\2\2\u010d\u010e")
        buf.write("\7g\2\2\u010e\u010f\7p\2\2\u010f\u0110\7u\2\2\u0110\u0111")
        buf.write("\7w\2\2\u0111\u0112\7t\2\2\u0112\u0113\7g\2\2\u0113\u0114")
        buf.write("\7P\2\2\u0114\u0115\7w\2\2\u0115\u0116\7o\2\2\u0116\u0117")
        buf.write("\7g\2\2\u0117\u0118\7t\2\2\u0118\u0119\7k\2\2\u0119\u011a")
        buf.write("\7e\2\2\u011a\u011b\7R\2\2\u011b\u011c\7t\2\2\u011c\u011d")
        buf.write("\7q\2\2\u011d\u011e\7r\2\2\u011e\u011f\7g\2\2\u011f\u0120")
        buf.write("\7t\2\2\u0120\u0121\7v\2\2\u0121\u0122\7{\2\2\u0122:\3")
        buf.write("\2\2\2\u0123\u0124\7g\2\2\u0124\u0125\7p\2\2\u0125\u0126")
        buf.write("\7u\2\2\u0126\u0127\7w\2\2\u0127\u0128\7t\2\2\u0128\u0129")
        buf.write("\7g\2\2\u0129\u012a\7P\2\2\u012a\u012b\7w\2\2\u012b\u012c")
        buf.write("\7o\2\2\u012c\u012d\7g\2\2\u012d\u012e\7t\2\2\u012e\u012f")
        buf.write("\7k\2\2\u012f\u0130\7e\2\2\u0130\u0131\7G\2\2\u0131\u0132")
        buf.write("\7p\2\2\u0132\u0133\7v\2\2\u0133\u0134\7k\2\2\u0134\u0135")
        buf.write("\7v\2\2\u0135\u0136\7{\2\2\u0136<\3\2\2\2\u0137\u0138")
        buf.write("\7g\2\2\u0138\u0139\7p\2\2\u0139\u013a\7\60\2\2\u013a")
        buf.write(">\3\2\2\2\u013b\u013c\7\60\2\2\u013c@\3\2\2\2\u013d\u013e")
        buf.write("\7/\2\2\u013eB\3\2\2\2\u013f\u0140\7e\2\2\u0140\u0141")
        buf.write("\7c\2\2\u0141\u0142\7n\2\2\u0142\u0143\7n\2\2\u0143\u0144")
        buf.write("\7\"\2\2\u0144\u0145\7g\2\2\u0145\u0146\7f\2\2\u0146\u0147")
        buf.write("\7w\2\2\u0147\u0148\7\60\2\2\u0148\u0149\7u\2\2\u0149")
        buf.write("\u014a\7v\2\2\u014a\u014b\7c\2\2\u014b\u014c\7p\2\2\u014c")
        buf.write("\u014d\7h\2\2\u014d\u014e\7q\2\2\u014e\u014f\7t\2\2\u014f")
        buf.write("\u0150\7f\2\2\u0150\u0151\7\60\2\2\u0151\u0152\7p\2\2")
        buf.write("\u0152\u0153\7n\2\2\u0153\u0154\7r\2\2\u0154\u0155\7\60")
        buf.write("\2\2\u0155\u0156\7u\2\2\u0156\u0157\7g\2\2\u0157\u0158")
        buf.write("\7o\2\2\u0158\u0159\7r\2\2\u0159\u015a\7t\2\2\u015a\u015b")
        buf.write("\7g\2\2\u015b\u015c\7\60\2\2\u015c\u015d\7q\2\2\u015d")
        buf.write("\u015e\7x\2\2\u015e\u015f\7g\2\2\u015f\u0160\7t\2\2\u0160")
        buf.write("\u0161\7p\2\2\u0161\u0162\7k\2\2\u0162\u0163\7i\2\2\u0163")
        buf.write("\u0164\7j\2\2\u0164\u0165\7v\2\2\u0165\u0166\7\60\2\2")
        buf.write("\u0166\u0167\7U\2\2\u0167\u0168\7k\2\2\u0168\u0169\7o")
        buf.write("\2\2\u0169\u016a\7r\2\2\u016a\u016b\7n\2\2\u016b\u016c")
        buf.write("\7g\2\2\u016c\u016d\7Y\2\2\u016d\u016e\7q\2\2\u016e\u016f")
        buf.write("\7t\2\2\u016f\u0170\7n\2\2\u0170\u0171\7f\2\2\u0171\u0181")
        buf.write("\7\60\2\2\u0172\u0173\7e\2\2\u0173\u0174\7c\2\2\u0174")
        buf.write("\u0175\7n\2\2\u0175\u0176\7n\2\2\u0176\u0177\7\"\2\2\u0177")
        buf.write("\u0178\7U\2\2\u0178\u0179\7Y\2\2\u0179\u0181\7\60\2\2")
        buf.write("\u017a\u017b\7e\2\2\u017b\u017c\7c\2\2\u017c\u017d\7n")
        buf.write("\2\2\u017d\u017e\7n\2\2\u017e\u017f\7\"\2\2\u017f\u0181")
        buf.write("\7\60\2\2\u0180\u013f\3\2\2\2\u0180\u0172\3\2\2\2\u0180")
        buf.write("\u017a\3\2\2\2\u0181D\3\2\2\2\u0182\u0183\7*\2\2\u0183")
        buf.write("F\3\2\2\2\u0184\u0185\7+\2\2\u0185H\3\2\2\2\u0186\u0188")
        buf.write("\5M\'\2\u0187\u0186\3\2\2\2\u0188\u0189\3\2\2\2\u0189")
        buf.write("\u0187\3\2\2\2\u0189\u018a\3\2\2\2\u018aJ\3\2\2\2\u018b")
        buf.write("\u018d\5O(\2\u018c\u018b\3\2\2\2\u018d\u018e\3\2\2\2\u018e")
        buf.write("\u018c\3\2\2\2\u018e\u018f\3\2\2\2\u018fL\3\2\2\2\u0190")
        buf.write("\u0191\4\62;\2\u0191N\3\2\2\2\u0192\u0193\t\2\2\2\u0193")
        buf.write("P\3\2\2\2\u0194\u0196\t\3\2\2\u0195\u0194\3\2\2\2\u0196")
        buf.write("\u0197\3\2\2\2\u0197\u0195\3\2\2\2\u0197\u0198\3\2\2\2")
        buf.write("\u0198\u0199\3\2\2\2\u0199\u019a\b)\2\2\u019aR\3\2\2\2")
        buf.write("\7\2\u0180\u0189\u018e\u0197\3\b\2\2")
        return buf.getvalue()


class overnightLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    PREFIX = 33
    LB = 34
    RB = 35
    INTEGER = 36
    STRING_LITERAL = 37
    WS = 38

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'string'", "'!'", "'type'", "'var'", "'number'", "'date'", 
            "'time'", "'lambda'", "'='", "'<'", "'>'", "'min'", "'max'", 
            "'sum'", "'avg'", "'listValue'", "'size'", "'domain'", "'singleton'", 
            "'filter'", "'getProperty'", "'superlative'", "'countSuperlative'", 
            "'countComparative'", "'aggregate'", "'concat'", "'reverse'", 
            "'ensureNumericProperty'", "'ensureNumericEntity'", "'en.'", 
            "'.'", "'-'", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "PREFIX", "LB", "RB", "INTEGER", "STRING_LITERAL", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "PREFIX", "LB", "RB", "INTEGER", "STRING_LITERAL", "DIGIT", 
                  "CHAR", "WS" ]

    grammarFileName = "overnight.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


